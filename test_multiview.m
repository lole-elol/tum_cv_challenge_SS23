% Script to test the reconstruct3DMultiview function
% and plot the point cloud generated by it

if exist('images','var') == 0  % Load the images if they are not already loaded yet
    imageDir = "test/delivery_area_dslr_undistorted/images";
    imageFiles = dir(fullfile(imageDir, '*.JPG')); % Assuming JPEG format for the images TODO: add support for other formats

    numImages = numel(imageFiles);
    numImages = 15;  % TODO: remove this line, it is only for testing purposes
    images = cell(1, numImages);

    % Load the images
    disp('Loading Images...')
    for i = 1:numImages
        fprintf('Loading image %d of %d: %s\r', i, numImages, imageFiles(i).name);
        imagePath = fullfile(imageDir, imageFiles(i).name);
        images{i} = imread(imagePath);
    end
end

% Load the camera parameters
cameraParams = logic.reconstruct3D.loadCameraParams('test/delivery_area_dslr_undistorted/cameras.txt');
% Reconstruct3d multiview
fprintf('\n Reconstructing 3D...\n')
[pointCloudInstance, camPoses, tracks] = logic.reconstruct3DMultiview(images, cameraParams);
denoisedPointCloud = pcdenoise(pointCloudInstance);  % TODO: tweak this or simpply do this step in cuboid fitting, only test
% Plot the point cloud
plotting.plotPointCloud(denoisedPointCloud, camPoses, cameraSizePlotSize=0.2)