% Auto-generated by cameraCalibrator app on 08-Jun-2023
%-------------------------------------------------------


function [cameraParams] = calibrateCamera(imageFileFolder, squareSize)
% Store the file names in a cell array contained in the folder
imageFileNames = dir(fullfile(imageFileFolder, '*.jpg'));
% Concatenate the names with the folder path
imageFileNames = fullfile({imageFileNames.folder}, {imageFileNames.name});
% disp(imageFileNames)

% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'mm', ...
'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
'ImageSize', [mrows, ncols]);

end



% % View reprojection errors
% h1=figure; showReprojectionErrors(cameraParams);

% % Visualize pattern locations
% h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% % Display parameter estimation errors
% displayErrors(estimationErrors, cameraParams);

% % For example, you can use the calibration data to remove effects of lens distortion.
% undistortedImage = undistortImage(originalImage, cameraParams);

% % See additional examples of how to use the calibration data.  At the prompt type:
% % showdemo('MeasuringPlanarObjectsExample')
% % showdemo('StructureFromMotionExample')
